buildscript {
    project.ext.CERN_VM = System.getProperty('CERN_TECHNET_VM') ?: System.getenv('CERN_TECHNET_VM') ?: false
    project.ext.DEPLOYMENT = System.getProperty('deployment') ?: false
    project.ext.VCS_TAG = System.getProperty('TRAVIS_TAG') ?: System.getenv('TRAVIS_TAG')
    project.ext.POM = [
            groupId    : 'jmad',
            artifactId : 'jmad-core',
            description: 'JMad is a Java API for the MadX software, which is used at CERN and in many other accelerator labs to simulate particle accelerators.'
    ]
    project.ext.INFO = [
            repo            : 'https://github.com/jmad/jmad-core.git',
            url             : 'https://jmad.github.io/',
            github          : 'https://github.com/jmad/jmad-core',
            githubIssues    : 'https://github.com/jmad/jmad-core/issues',
            licenseNameShort: 'Apache-2.0',
            licenseName     : 'The Apache License, Version 2.0',
            licenseUrl      : 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    ]
    project.ext.BINTRAY = [
            repo        : 'jmad-repo',
            name        : 'jmad-core',
            organization: 'jmad',
            userName    : System.getProperty('BINTRAY_USER') ?: System.getenv('BINTRAY_USER'),
            apiToken    : System.getProperty('BINTRAY_API_TOKEN') ?: System.getenv('BINTRAY_API_TOKEN')
    ]

    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }

}

plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.7.3'
}


if (DEPLOYMENT) {
    println 'Applying deployment scripts'
    apply from: './scripts/bintray-deploy.gradle'
}

repositories { mavenCentral() }

dependencies {
    compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.10'
    compile group: 'gov.nist.math', name: 'jama', version: '1.0.3'
    compile group: 'com.google.guava', name: 'guava', version: '25.0-jre'

    compile group: 'org.springframework', name: 'spring-core', version: '5.0.6.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '5.0.6.RELEASE'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.16.1'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'

    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    testCompile group: 'easymock', name: 'easymock', version: '2.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.9.1'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

sourceSets {
    main {
        java { srcDirs = ['src/java'] }
        resources { srcDirs = ['src/java'] }
    }

    test {
        java { srcDirs = ['src/test'] }
        resources { srcDirs = ['src/test'] }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("$buildDir/reports/jacoco/report.xml")
        html.enabled true
        csv.enabled false
    }
}

javadoc { options.encoding = "UTF-8" }

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}