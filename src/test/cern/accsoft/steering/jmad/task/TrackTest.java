// @formatter:off
 /*******************************************************************************
 *
 * This file is part of JMad.
 * 
 * Copyright (c) 2008-2011, CERN. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 ******************************************************************************/
// @formatter:on

package cern.accsoft.steering.jmad.task;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

import cern.accsoft.steering.jmad.domain.result.track.TrackResultRequest;
import cern.accsoft.steering.jmad.domain.result.track.TrackResultRequestImpl;
import cern.accsoft.steering.jmad.domain.track.RelativeParticleCoordinateImpl;
import cern.accsoft.steering.jmad.domain.track.RelativeParticleDistributionImpl;
import cern.accsoft.steering.jmad.domain.track.TrackInitialCondition;
import cern.accsoft.steering.jmad.domain.track.TrackInitialConditionImpl;
import cern.accsoft.steering.jmad.kernel.task.track.TrackTask;

public class TrackTest {

    @Test
    public void testTrackTask() {
        TrackInitialCondition init = new TrackInitialConditionImpl();
        init.setDeltaP(0.1);
        init.setCheckAperture(false);
        init.setCreateLossParticleFile(false);
        init.setOnePass(false);
        init.setOneTable(false);
        init.setQuantumExcited(false);
        init.setSynchrotronDamped(false);
        init.setWriteAtEachTurn(true);

        RelativeParticleDistributionImpl dist = new RelativeParticleDistributionImpl();
        dist.add(new RelativeParticleCoordinateImpl(1.0, 1.0, 1.0, 1.0, 1.0, 1.0));
        TrackResultRequest request = new TrackResultRequestImpl(dist);
        request.setApertureLimited(false);
        request.setPrintFrequency(1);
        request.setTurns(1024);

        TrackTask task = new TrackTask(init, request);
        String correctCommand = "\n"
                + "// ***** BEGIN autogenerated task: cern.accsoft.steering.jmad.kernel.task.track.TrackTask *****\n"
                + "track, deltap=0.1, dump;\n" + "start, x=1.0, px=1.0, y=1.0, py=1.0, t=1.0, pt=1.0;\n"
                + "run, turns=1024, ffile=1;\n" + "endtrack;\n"
                + "// ***** END autogenerated task: cern.accsoft.steering.jmad.kernel.task.track.TrackTask *****";
        assertEquals(task.compose(), correctCommand);
    }

}
