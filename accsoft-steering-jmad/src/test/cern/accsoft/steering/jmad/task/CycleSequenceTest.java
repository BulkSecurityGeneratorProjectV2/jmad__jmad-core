package cern.accsoft.steering.jmad.task;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import cern.accsoft.steering.jmad.domain.machine.RangeDefinition;
import cern.accsoft.steering.jmad.domain.machine.RangeDefinitionImpl;
import cern.accsoft.steering.jmad.domain.machine.SequenceDefinition;
import cern.accsoft.steering.jmad.domain.machine.SequenceDefinitionImpl;
import cern.accsoft.steering.jmad.domain.twiss.TwissInitialConditionsImpl;
import cern.accsoft.steering.jmad.factory.BeamFactory;
import cern.accsoft.steering.jmad.kernel.task.AbstractTask;
import cern.accsoft.steering.jmad.kernel.task.CycleSequence;

public class CycleSequenceTest {

	private SequenceDefinition sequenceDefinition;
	private RangeDefinitionImpl rangeDefinition;

	@Before
	public void initRangeDefinition() {
		sequenceDefinition = new SequenceDefinitionImpl("testseq", BeamFactory
				.createDefaultLhcBeam());
		rangeDefinition = new RangeDefinitionImpl(sequenceDefinition, "ALL",
				new TwissInitialConditionsImpl());
	}

	@Test(expected = NullPointerException.class)
	public void testNoRange() {
		AbstractTask task = new CycleSequence(null);
		assertEquals("", task.compose());
	}

	@Test
	public void testNoStartElement() {
		AbstractTask task = new CycleSequence(this.rangeDefinition);
		assertEquals(
				"\n// ***** BEGIN autogenerated task: cern.accsoft.steering.jmad.kernel.task.CycleSequence *****\n"
						+ "// ***** END autogenerated task: cern.accsoft.steering.jmad.kernel.task.CycleSequence *****",
				task.compose());

	}

	@Test
	public void testValidStartElement() {
		this.rangeDefinition.setStartElementName("EXAMPLE.ELEMENT");
		AbstractTask task = new CycleSequence(this.rangeDefinition);
		assertEquals(
				"\n// ***** BEGIN autogenerated task: cern.accsoft.steering.jmad.kernel.task.CycleSequence *****\n"
						+ "seqedit, sequence=testseq;\n"
						+ "flatten;\n"
						+ "cycle, start=EXAMPLE.ELEMENT;\n"
						+ "endedit;\n"
						+ "// ***** END autogenerated task: cern.accsoft.steering.jmad.kernel.task.CycleSequence *****",
				task.compose());
	}
}
